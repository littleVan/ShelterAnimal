c
C
x<-3
y<-4
z<-x+y
z
install.packages("gplots")
library(gplots)
help(package="gplots")
attach(mtcars)
plot(wt, mpg)
abline(lm(mpg-wt))
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
detach(mtcars)
install.packages("diagram")
library(diagram)
install.packages("shape")
install.packages("shape")
library(diagram)
library(shape)
library(diagram)
2+2
var.1 <- c(0,1,2,3)
print(var.1)
print(var.1)
cat(var.1)
var_x <- "Hello"
cat("The class of var_x is ",class(var_x),"\n")
a <- "I"
b <- 'am'
c <- "learning R"
print(paste(a,b,c))
cat(paste(a,b,c))
s <- c('apple','red',5,TRUE)
print(s)
print(seq(5, 9, by = 0.4))
print(seq(5, 9))
v <- 6.6:12.6
print(v)
v <- 6.6
print(v)
t <- c("Sun","Mon","Tue","Wed","Thurs","Fri","Sat")
u <- t[c(2,3,6)]
print(u)
v <- t[c(TRUE,FALSE,FALSE,FALSE,FALSE,TRUE,FALSE)]
print(v)
x <- t[c(-2,-5)]
print(x)
v1 <- c(3,8,4,5,0,11)
v2 <- c(4,11,0,8,1,2)
add.result <- v1+v2
print(add.result)
list_data <- list("Red", "Green", c(21,32,11), TRUE, 51.23, 119.1)
print(list_data)
list_data <- list(c("Jan","Feb","Mar"), matrix(c(3,9,5,1,-2,8), nrow = 2), list("green",12.3))
print(list_data)
names(list_data) <- c("1st Quarter", "A_Matrix", "A Inner list")
print(list_data[1])
print(list_data$A_Matrix)
list_data[4] <- "New element"
print(list_data[4])
list_data[4] <- NULL
print(list_data[4])
matrix1 <- matrix(c(3, 9, -1, 4, 2, 6), nrow = 2)
print(matrix1)
matrix2 <- matrix(c(5, 2, 0, 9, 3, 4), nrow = 2)
print(matrix2)
result <- matrix1 * matrix2
cat("Result of multiplication","\n")
print(result)
result <- matrix1 / matrix2
cat("Result of division","\n")
print(result)
tmat1<-t(matrix1)
print(tmat1)
result <- matrix1 %*% tmat1
print(result)
result <- matrix1 % tmat1
result <- matrix1 * tmat1
result <- matrix1 %*% tmat1
print(result)
column.names <- c("COL1","COL2","COL3")
row.names <- c("ROW1","ROW2","ROW3")
matrix.names <- c("Matrix1","Matrix2")
vector1 <- c(5,9,3)
vector2 <- c(10,11,12,13,14,15)
result <- array(c(vector1,vector2),dim = c(3,3,2))
print(result)
result <- array(c(vector1,vector2),dim = c(3,3,2),dimnames = list(row.names,column.names, matrix.names))
print(result[3,,2])
print(result[1,3,1])
print(result[,,2])
emp.data <- data.frame(
emp_id = c (1:5),
emp_name = c("Rick","Dan","Michelle","Ryan","Gary"),
salary = c(623.3,515.2,611.0,729.0,843.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11","2015-03-27")),
stringsAsFactors = FALSE
# It is a logical that indicates whether strings in a data frame
# should be treated as factor variables or as just plain strings
)
print(emp.data)
str(emp.data)
emp.newdata <- 	data.frame(
emp_id = c (6:8),
emp_name = c("Rasmi","Pranab","Tusar"),
salary = c(578.0,722.5,632.8),
start_date = as.Date(c("2013-05-21","2013-07-30","2014-06-17")),
dept = c("IT","Operations","Fianance"),
stringsAsFactors = FALSE
)
print(emp.newdata)
emp.finaldata <- rbind(emp.data,emp.newdata)
print(emp.finaldata)
emp.finaldata <- rbind(emp.data,emp.newdata)
a<- seq(1:6)
z<-'='
for (i in a){
z <- paste(z,i,sep = "+")
}
print(z)
new.function <- function(a=7) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
new.function()
new.function <- function(a=7) {
for(i in 1:a) {
b <- i^2
print(b)
}
}
new.function()
new.function(9)
library(sp)
install.packages("ape") #This is will be used in your next homework for autoccorelation
install.packages("sp")
install.packages("spdep")
install.packages("classInt")
install.packages("rgeos")
install.packages("maptools")
install.packages("rgdal")
install.packages("ggplot2")
install.packages("weights")
install.packages("ape") #This is will be used in your next homework for autoccorelation
defaults write org.R-project.R force.LANG en_US.UTF-8
system("defaults write org.R-project.R force.LANG en_US.UTF-8")
install.packages(c("Matrix", "mgcv", "nlme"))
detach("package:datasets", unload=TRUE)
library("datasets", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(sp)
library(spdep)
library(classInt)
library(rgeos)
library(maptools)
library(rgdal)
library(ggplot2)
library(weights)
library(ape)
min(pOilGasLocationPA)
summary(pOilGasLocationPA)
arr=c(1)
arr
arr[-1]
arr=arr[-1]
arr
arr=c(1,1)
arr
arr[-1]
arr=c(1,1,1)
arr
arr[-1]
arr[1]
arr[0]
arr[2]
arr[3]
arr[-1]
arr[-2]
arr[-3]
clc
clc(0)
clean
cl
arr
a=c(arr[-1])
a
a=c(arr[-1],2)
a
c(1:10)
library(ggplot2)
library(rpart)
library(rattle)
library(ggplot2)
library(rpart)
library(rattle)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(randomForest)
library(dplyr)
library(RGtk2)
library(caret)
setwd("/Users/yifan/Documents/Data_Analytics/DAFinal_Project")
#train <- read.csv("train.csv", stringsAsFactors=FALSE)
train <- read.csv("train.csv", stringsAsFactors=FALSE)
test <- read.csv("test.csv", stringsAsFactors=FALSE)
summary(train)
summary(test)
str(train)
str(test)
train1 <- train
test1 <- test
train1$OutcomeSubtype <- NULL
test1$OutcomeType <- NA
colnames(train1)[1] <- "ID"
combine <- rbind(train1, test1)
combine$SexuponOutcome[combine$SexuponOutcome==''] <- 'Unknown'
combine$SexIntact[grepl("Intact", combine$SexuponOutcome)] <- 'Intact'
combine$SexIntact[grepl("Neutered", combine$SexuponOutcome)] <- 'NotIntact'
combine$SexIntact[grepl("Spayed", combine$SexuponOutcome)] <- 'NotIntact'
combine$SexIntact[grepl("Unknown", combine$SexuponOutcome)] <- 'Unknown'
combine$SexGender[grepl("Female", combine$SexuponOutcome)] <- 'Female'
combine$SexGender[grepl("Male", combine$SexuponOutcome)] <- 'Male'
combine$SexGender[grepl("Unknown", combine$SexuponOutcome)] <- 'Unknown'
